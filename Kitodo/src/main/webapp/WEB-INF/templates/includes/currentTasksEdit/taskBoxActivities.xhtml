<!--
 *
 * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
 *
 * This file is part of the Kitodo project.
 *
 * It is licensed under GNU General Public License version 3 or later.
 *
 * For the full copyright and license information, please read the
 * GPL3-License.txt file that was distributed with this source code.
 *
-->

<ui:composition
        xmlns:c="http://java.sun.com/jsp/jstl/core"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:p="http://primefaces.org/ui"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    <c:set var="task" value="#{CurrentTaskForm.currentTask}" scope="request"/>
    <c:set var="process" value="#{CurrentTaskForm.currentTask.process}" scope="request"/>

    <h:panelGroup rendered="#{task.processingUser.id == LoginForm.loggedUser.id and task.processingStatus eq 'INWORK'}">

        <!--  Import -->
        <h:form id="actionForm">
            <!-- Action -->
            <ui:fragment>

                <h4>#{msgs.actions}</h4>

                <h:panelGrid columns="1">

                    <!-- Show Metadata Block -->
                    <h:panelGroup id="metadataBlocked"
                                  rendered="#{process.blockedUser != null}">
                        <h:outputText value="#{msgs.blocked}"/>
                        <br/>
                        <h:panelGrid columns="2" cellpadding="3">
                            <h:outputText value="#{msgs.user}: "/>
                            <h:outputText value="#{process.blockedUser.fullName}"/>
                            <h:outputText value="#{msgs.location}: "/>
                            <h:outputText value="#{process.blockedUser.location}"/>
                        </h:panelGrid>
                        <h:outputText value="#{msgs.later}"/>

                        <!-- If blocked by yourself: you can unblocked -->
                        <h:commandLink id="releaseLock"
                                       rendered="#{(process.blockedUser != null) and (process.blockedUser.id == LoginForm.loggedUser.id)}"
                                       action="#{CurrentTaskForm.releaseLock}"
                                       title="#{msgs.orUnlockHere}">
                            <h:outputText><i class="fa fa-lock"/> #{msgs.orUnlockHere}</h:outputText>
                        </h:commandLink>
                    </h:panelGroup>

                    <!-- Script-button -->
                    <p:commandLink id="executeScript"
                                   rendered="#{task.scriptPath != null and task.scriptPath != '' and task.process.blockedUser == null}"
                                   action="#{CurrentTaskForm.executeScript}" title="#{task.scriptName}">
                        <f:setPropertyActionListener target="#{CurrentTaskForm.scriptPath}" value="#{task.scriptPath}"/>
                        <h:outputText><i class="fa fa-cogs"/> #{msgs.scriptExecute}: #{task.scriptName}</h:outputText>
                    </p:commandLink>

                    <!-- tiffHeaderDownload-button -->
                    <h:commandLink id="downloadTiffHeader" rendered="#{0==1 and process.blockedUser == null}"
                                   action="#{CurrentTaskForm.downloadTiffHeader}" title="#{msgs.saveTifHeaderFile}">
                        <h:outputText><i class="fa fa-file-o"/> #{msgs.saveTifHeaderFile}</h:outputText>
                    </h:commandLink>

                    <!-- Import DMS-button -->

                    <!-- TODO: delete this warning once the root cause of the timeout problem is solved  -->
                    <h:outputText id="timeoutWarning"
                                  rendered="#{task.typeExportDMS and process.blockedUser == null}"
                                  value="#{msgs.timeoutWarningDMS}"/>

                    <!-- Upload-button -->
                    <h:commandLink id="exportDms" rendered="#{task.typeExportDMS and process.blockedUser == null}"
                                   action="#{CurrentTaskForm.exportDMS}" title="#{msgs.importDms}">
                        <h:outputText><i class="fa fa-file-archive-o"/> #{msgs.importDms}</h:outputText>
                    </h:commandLink>

                    <!-- Metadaten-button -->
                    <h:link id="editMetadata"
                            onclick="$('#loadingScreen').show()"
                            rendered="#{task.typeMetadata and process.blockedUser == null}"
                            title="#{msgs.metadataEdit}"
                            outcome="metadataEditor">
                        <h:outputText><i class="fa fa-list-alt"/> #{msgs.metadataEdit}</h:outputText>
                        <f:param name="id" value="#{task.process.id}"/>
                        <f:param name="referer" value="currentTasksEdit.jsf?id=#{task.id}"/>
                        <f:param name="templateTaskId" value="#{CurrentTaskForm.getCorrespondingTemplateTaskId(task)}"/>
                    </h:link>

                    <!-- Re-generate all images action link -->
                    <p:commandLink id="generateAllImages"
                                   rendered="#{CurrentTaskForm.showingGenerationActions and process.blockedUser == null}"
                                   action="#{CurrentTaskForm.generateAllImages}"
                                   disabled="#{!CurrentTaskForm.isImageGenerationPossible()}"
                                   title="#{CurrentTaskForm.isImageGenerationPossible() ? msgs.regenerateAllImages : msgs.imageGenerationNotPossible}">
                        <h:outputText><i class="fa fa-cog"/> #{msgs.regenerateAllImages}</h:outputText>
                    </p:commandLink>
                    <!-- Generate missing and re-generate damaged images action link -->
                    <p:commandLink id="regenerateMissingAndDamagedImages"
                                   rendered="#{CurrentTaskForm.showingGenerationActions and process.blockedUser == null}"
                                   action="#{CurrentTaskForm.generateMissingAndDamagedImages}"
                                   disabled="#{!CurrentTaskForm.isImageGenerationPossible()}"
                                   title="#{CurrentTaskForm.isImageGenerationPossible() ? msgs.regenerateMissingAndDamagedImages : msgs.imageGenerationNotPossible}">
                        <h:outputText><i class="fa fa-cog"/> #{msgs.regenerateMissingAndDamagedImages}</h:outputText>
                    </p:commandLink>
                    <!-- Generate missing images action link -->
                    <p:commandLink id="generateMissingImages"
                                   rendered="#{CurrentTaskForm.showingGenerationActions and process.blockedUser == null}"
                                   action="#{CurrentTaskForm.generateMissingImages}"
                                   disabled="#{!CurrentTaskForm.isImageGenerationPossible()}"
                                   title="#{CurrentTaskForm.isImageGenerationPossible() ? msgs.generateMissingImages : msgs.imageGenerationNotPossible}">
                        <h:outputText><i class="fa fa-cog"/> #{msgs.generateMissingImages}</h:outputText>
                    </p:commandLink>

                    <!-- add correction comment -->
                    <p:commandLink id="addCorrectionComment"
                                   action="#{CommentForm.newComment(true)}"
                                   oncomplete="PF('newCommentDialog').show()"
                                   rendered="#{CommentForm.correctionCommentAllowed}"
                                   update=":newCommentForm">
                        <h:outputText><i class="fa fa-exclamation-circle" /> #{msgs.correctionMessageWrite}</h:outputText>
                    </p:commandLink>

                    <p:commandLink id="validateImages"
                                   rendered="#{CurrentTaskForm.showingImageValidationAction and process.blockedUser == null}"
                                   action="#{LtpValidationReportDialog.validateTaskAndOpen(CurrentTaskForm.currentTask)}"
                                   disabled="#{!CurrentTaskForm.isImageValidationPossible()}"
                                   title="#{CurrentTaskForm.isImageGenerationPossible() ? msgs['currentTaskEdit.validateImages'] : msgs['currentTaskEdit.imageValidationNotPossible']}"
                                   update=":ltpValidationReportDialogForm">
                        <h:outputText><i class="fa fa-cog"/> #{msgs['currentTaskEdit.validateImages']}</h:outputText>
                    </p:commandLink>

                    <!-- Edit Cancel-buttons -->
                    <p:commandLink id="cancel" action="#{CurrentTaskForm.releaseTask}" title="#{msgs.releaseTask}">
                        <h:outputText><i class="fa fa-ban"/> #{msgs.releaseTask}</h:outputText>
                        <p:confirm header="#{msgs.confirmRelease}" message="#{msgs.reallyReleaseTask}"
                                   icon="ui-icon-alert"/>
                    </p:commandLink>
                    <!-- Close button -->
                    <h:panelGroup title="#{CommentForm.hasUnsolvedProblem() ? msgs['dataEditor.comment.markCorrectionCommentAsSolvedToCloseTask'] : CommentForm.getTaskCloseLinkText()}">
                        <p:commandLink id="close"
                                       action="#{CurrentTaskForm.closeTaskByUser}"
                                       disabled="#{CommentForm.hasUnsolvedProblem()}">
                            <h:outputText><i class="fa fa-check"/> #{CommentForm.getTaskCloseLinkText()}</h:outputText>
                            <p:confirm header="#{msgs.confirmClose}" message="#{CommentForm.getTaskCloseLinkText()}?" icon="ui-icon-alert"/>
                        </p:commandLink>
                    </h:panelGroup>
                </h:panelGrid>
            </ui:fragment>
        </h:form>
    </h:panelGroup>
</ui:composition>
