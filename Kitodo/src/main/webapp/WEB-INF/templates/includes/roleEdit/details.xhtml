<!--
  * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
  *
  * This file is part of the Kitodo project.
  *
  * It is licensed under GNU General Public License version 3 or later.
  *
  * For the full copyright and license information, please read the
  * GPL3-License.txt file that was distributed with this source code.
  -->

<ui:composition
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:p="http://primefaces.org/ui">

    <!--@elvariable id="isViewMode" type="boolean"-->

    <p:panelGrid columns="1" layout="grid">
        <p:panelGrid columns="2" layout="grid">
            <p:row>
                <div>
                    <p:outputLabel for="titleInput" value="#{msgs.title}"/>
                    <p:inputText id="titleInput" class="input" disabled="#{isViewMode}"
                                 value="#{RoleForm.role.title}" placeholder="#{msgs.title}"
                                 required="#{empty param['editForm:saveButtonToggler']}"/>
                </div>
            </p:row>
            <p:row rendered="#{SecurityAccessController.hasAuthorityGlobalToAddOrEditRole()}">
                <div>
                    <p:outputLabel for="client" value="#{msgs.client}"/>
                    <p:selectOneMenu id="client" converter="#{clientConverter}" value="#{RoleForm.role.client}">
                        <f:selectItems value="#{RoleForm.clients}"
                                       var="client"
                                       itemValue="#{client}"
                                       itemLabel="#{client.name}"/>
                        <p:ajax event="change" oncomplete="toggleSave()"/>
                    </p:selectOneMenu>
                </div>
            </p:row>
            <p:row rendered="#{not SecurityAccessController.hasAuthorityGlobalToAddOrEditRole()}" />
        </p:panelGrid>
        <p:panelGrid columns="#{SecurityAccessController.hasAuthorityGlobalToViewRole() ? 2 : 1}"
                     layout="grid">
            <p:row rendered="#{SecurityAccessController.hasAuthorityGlobalToViewRole()}">
                <!--global authorities-->
                <h:panelGroup>
                    <h3 style="margin-bottom: 20px">
                        <h:outputText value="#{msgs.globalAssignable}"/>
                    </h3>
                    <!--@elvariable id="authority" type="org.kitodo.data.database.beans.Authority"-->
                    <p:pickList id="authoritiesGlobalPick"
                                showSourceFilter="true" showTargetFilter="true"
                                filterMatchMode="contains"
                                responsive="true"
                                disabled="#{not SecurityAccessController.hasAuthorityGlobalToEditRole() or isViewMode}"
                                value="#{RoleForm.globalAssignableAuthorities}"
                                converter="#{authorityConverter}"
                                var="authority"
                                itemLabel="#{HelperForm.getTranslated(authority.getTitleWithoutSuffix())}"
                                itemValue="#{authority}"
                                onTransfer="toggleSave()">
                        <f:facet name="sourceCaption">#{msgs.available}</f:facet>
                        <f:facet name="targetCaption">#{msgs.assigned}</f:facet>
                    </p:pickList>
                </h:panelGroup>
            </p:row>

            <p:row>
                <!--client authorities-->
                <h:panelGroup>
                    <h3 style="margin-bottom: 20px">
                        <h:outputText value="#{SecurityAccessController.hasAuthorityGlobalToViewRole() ? msgs.clientAssignable : msgs.authorities}"/>
                    </h3>
                    <p:pickList id="authoritiesClientPick"
                                value="#{RoleForm.clientAssignableAuthorities}"
                                converter="#{authorityConverter}"
                                var="authority"
                                disabled="#{isViewMode}"
                                showSourceFilter="true" showTargetFilter="true"
                                filterMatchMode="contains"
                                responsive="true"
                                onTransfer="toggleSave()"
                                itemLabel="#{HelperForm.getTranslated(authority.getTitleWithoutSuffix())}"
                                itemValue="#{authority}">
                        <f:facet name="sourceCaption">#{msgs.available}</f:facet>
                        <f:facet name="targetCaption">#{msgs.assigned}</f:facet>
                    </p:pickList>
                </h:panelGroup>
            </p:row>
        </p:panelGrid>
        <p:row/>
    </p:panelGrid>

</ui:composition>
